#include <iostream>

#include "topHat.hpp"

int main() {
    
    // **************************************************************
	// Declare basic variables
	// **************************************************************
    int Nx = 8, Ny = 8;  // Global array size
    // ####################### Done #################################

    // **************************************************************
	//  Declare Arrays
	// **************************************************************
    vector<vector<double>> globalArray(Nx, vector<double>(Ny));
    // ####################### Done #################################

    // **************************************************************
	// Generate random values to the global array
	// **************************************************************
    generateRandomData(globalArray, Nx, Ny);
    // ####################### Done #################################
    
    // **************************************************************
	// Print the array
	// **************************************************************
    cout << "Generated random array:\n";
    for (const auto &row : globalArray) {
        for (double val : row)
            cout << val << "\t";
        cout << endl;
    }
    // ####################### Done #################################

    // **************************************************************
    // Declare extra arrays to test different BCs
    // **************************************************************
    vector<vector<double>> globalArray1 = globalArray; 
    vector<vector<double>> globalArray2 = globalArray; 
    // ####################### Done #################################

    // **************************************************************
	// Apply filtering
	// **************************************************************
    applyTopHatFilter(globalArray, Nx, Ny);
    // ####################### Done #################################

    // **************************************************************
	// Print the array
	// **************************************************************
    cout << "Filtered array - No BC:\n";
    for (const auto &row : globalArray) {
        for (double val : row)
            cout << val << "\t";
        cout << endl;
    }
    // ####################### Done #################################

    // **************************************************************
	// Apply filtering - Periodic BC
	// **************************************************************
    applyTopHatFilterPeriodicBC(globalArray1, Nx, Ny);
    // ####################### Done #################################

    // **************************************************************
	// Print the array
	// **************************************************************
    cout << "Filtered array - Periodic BC:\n";
    for (const auto &row : globalArray1) {
        for (double val : row)
            cout << val << "\t";
        cout << endl;
    }
    // ####################### Done #################################

    // **************************************************************
	// Apply filtering - Zero BC
	// **************************************************************
    applyTopHatFilterZeroBC(globalArray2, Nx, Ny);
    // ####################### Done #################################

    // **************************************************************
	// Print the array
	// **************************************************************
    cout << "Filtered array - Zero BC:\n";
    for (const auto &row : globalArray2) {
        for (double val : row)
            cout << val << "\t";
        cout << endl;
    }
    // ####################### Done #################################

    return 0;
}
